name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

 Deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          CGO_ENABLED: 1
        run: |
          docker build -t $DOCKER_USERNAME/nandobot-go .
          docker push $DOCKER_USERNAME/nandobot-go   

      - name: Deploy in EC2
        env:
            PRIVATE_KEY: ${{ secrets.EC2_KEY  }}
            HOSTNAME : ${{ secrets.EC2_HOST  }}
            USER_NAME : ${{ secrets.EC2_USERNAME  }}
            DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
            
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key         
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} echo "${DOCKER_PASSWORD}" | docker login --username "${DOCKER_USERNAME}" --password-stdin
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} docker pull ${DOCKER_USERNAME}/nandobot-go
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} docker stop nandobot-go || true 
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} docker rm nandobot-go || true 
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} docker run -d --name nandobot-go -v /home/ec2-user/nandobot-go/nandobot.db:/app/nandobot.db -v /home/ec2-user/nandobot-go/config.json:/app/config.json -p 8080:8080 $DOCKER_USERNAME/nandobot-go   
            
      
      
      
      
